{"version":3,"sources":["candy.js"],"names":["Circle","constructor","origin","speed","color","angle","context","this","position","renderCount","draw","fillStyle","beginPath","arc","x","y","Math","PI","fill","move","sin","cos","Boom","circleCount","area","stop","circles","randomArray","range","length","floor","random","randomColor","randomRange","start","end","init","i","circle","push","forEach","index","width","height","splice","CursorSpecialEffects","computerCanvas","document","createElement","renderCanvas","computerContext","getContext","renderContext","globalWidth","window","innerWidth","globalHeight","innerHeight","booms","running","handleMouseDown","e","boom","clientX","clientY","run","handlePageHide","style","top","left","zIndex","pointerEvents","body","append","addEventListener","bind","requestAnimationFrame","clearRect","drawImage","cursorSpecialEffects"],"mappings":"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","file":"../js/candy.min.js","sourcesContent":["// Copied from [DIYgod's Hexo Theme Sagiri](https://github.com/DIYgod/diygod.me/blob/master/themes/sagiri/)\r\n\r\nclass Circle {\r\n    constructor({ origin, speed, color, angle, context }) {\r\n      this.origin = origin\r\n      this.position = { ...this.origin }\r\n      this.color = color\r\n      this.speed = speed\r\n      this.angle = angle\r\n      this.context = context\r\n      this.renderCount = 0\r\n    }\r\n  \r\n    draw() {\r\n      this.context.fillStyle = this.color\r\n      this.context.beginPath()\r\n      this.context.arc(this.position.x, this.position.y, 2, 0, Math.PI * 2)\r\n      this.context.fill()\r\n    }\r\n  \r\n    move() {\r\n      this.position.x = (Math.sin(this.angle) * this.speed) + this.position.x\r\n      this.position.y = (Math.cos(this.angle) * this.speed) + this.position.y + (this.renderCount * 0.3)\r\n      this.renderCount++\r\n    }\r\n  }\r\n  \r\n  class Boom {\r\n    constructor ({ origin, context, circleCount = 10, area }) {\r\n      this.origin = origin\r\n      this.context = context\r\n      this.circleCount = circleCount\r\n      this.area = area\r\n      this.stop = false\r\n      this.circles = []\r\n    }\r\n  \r\n    randomArray(range) {\r\n      const length = range.length\r\n      const randomIndex = Math.floor(length * Math.random())\r\n      return range[randomIndex]\r\n    }\r\n  \r\n    randomColor() {\r\n      const range = ['8', '9', 'A', 'B', 'C', 'D', 'E', 'F']\r\n      return '#' + this.randomArray(range) + this.randomArray(range) + this.randomArray(range) + this.randomArray(range) + this.randomArray(range) + this.randomArray(range)\r\n    }\r\n  \r\n    randomRange(start, end) {\r\n      return (end - start) * Math.random() + start\r\n    }\r\n  \r\n    init() {\r\n      for(let i = 0; i < this.circleCount; i++) {\r\n        const circle = new Circle({\r\n          context: this.context,\r\n          origin: this.origin,\r\n          color: this.randomColor(),\r\n          angle: this.randomRange(Math.PI - 1, Math.PI + 1),\r\n          speed: this.randomRange(1, 6)\r\n        })\r\n        this.circles.push(circle)\r\n      }\r\n    }\r\n  \r\n    move() {\r\n      this.circles.forEach((circle, index) => {\r\n        if (circle.position.x > this.area.width || circle.position.y > this.area.height) {\r\n          return this.circles.splice(index, 1)\r\n        }\r\n        circle.move()\r\n      })\r\n      if (this.circles.length == 0) {\r\n        this.stop = true\r\n      }\r\n    }\r\n  \r\n    draw() {\r\n      this.circles.forEach(circle => circle.draw())\r\n    }\r\n  }\r\n  \r\n  class CursorSpecialEffects {\r\n    constructor() {\r\n      this.computerCanvas = document.createElement('canvas')\r\n      this.renderCanvas = document.createElement('canvas')\r\n  \r\n      this.computerContext = this.computerCanvas.getContext('2d')\r\n      this.renderContext = this.renderCanvas.getContext('2d')\r\n  \r\n      this.globalWidth = window.innerWidth\r\n      this.globalHeight = window.innerHeight\r\n  \r\n      this.booms = []\r\n      this.running = false\r\n    }\r\n  \r\n    handleMouseDown(e) {\r\n      const boom = new Boom({\r\n        origin: { x: e.clientX, y: e.clientY },\r\n        context: this.computerContext,\r\n        area: {\r\n          width: this.globalWidth,\r\n          height: this.globalHeight\r\n        }\r\n      })\r\n      boom.init()\r\n      this.booms.push(boom)\r\n      this.running || this.run()\r\n    }\r\n  \r\n    handlePageHide() {\r\n      this.booms = []\r\n      this.running = false\r\n    }\r\n  \r\n    init() {\r\n      const style = this.renderCanvas.style\r\n      style.position = 'fixed'\r\n      style.top = style.left = 0\r\n      style.zIndex = '999999999999999999999999999999999999999999'\r\n      style.pointerEvents = 'none'\r\n  \r\n      style.width = this.renderCanvas.width = this.computerCanvas.width = this.globalWidth\r\n      style.height = this.renderCanvas.height = this.computerCanvas.height = this.globalHeight\r\n  \r\n      document.body.append(this.renderCanvas)\r\n  \r\n      window.addEventListener('mousedown', this.handleMouseDown.bind(this))\r\n      window.addEventListener('pagehide', this.handlePageHide.bind(this))\r\n    }\r\n  \r\n    run() {\r\n      this.running = true\r\n      if (this.booms.length == 0) {\r\n        return this.running = false\r\n      }\r\n  \r\n      requestAnimationFrame(this.run.bind(this))\r\n  \r\n      this.computerContext.clearRect(0, 0, this.globalWidth, this.globalHeight)\r\n      this.renderContext.clearRect(0, 0, this.globalWidth, this.globalHeight)\r\n  \r\n      this.booms.forEach((boom, index) => {\r\n        if (boom.stop) {\r\n          return this.booms.splice(index, 1)\r\n        }\r\n        boom.move()\r\n        boom.draw()\r\n      })\r\n      this.renderContext.drawImage(this.computerCanvas, 0, 0, this.globalWidth, this.globalHeight)\r\n    }\r\n  }\r\n  \r\n  const cursorSpecialEffects = new CursorSpecialEffects()\r\n  cursorSpecialEffects.init()"]}